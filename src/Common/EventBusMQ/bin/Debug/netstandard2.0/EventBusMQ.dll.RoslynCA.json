{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "3.7.0.0",
        "fileVersion": "3.7.0-6.20418.4 (9b878f99)",
        "semanticVersion": "3.7.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0649",
          "level": "warning",
          "message": "Field 'RabbitMQConnection._disposed' is never assigned to, and will always have its default value false",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Micro%20Services/CreditService/src/Common/EventBusMQ/RabbitMQConnection.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 22,
                  "endLine": 12,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 4
          }
        },
        {
          "ruleId": "S3459",
          "level": "warning",
          "message": "Remove unassigned field '_disposed', or set its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Micro%20Services/CreditService/src/Common/EventBusMQ/RabbitMQConnection.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 22,
                  "endLine": 12,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Micro%20Services/CreditService/src/Common/EventBusMQ/RabbitMQConnection.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Micro%20Services/CreditService/src/Common/EventBusMQ/RabbitMQConnection.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Micro%20Services/CreditService/src/Common/EventBusMQ/RabbitMQConnection.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 21,
                  "endLine": 64,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'RabbitMQConnection' or mark the type as 'sealed'.",
              "1": "'RabbitMQConnection.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S2737",
          "level": "warning",
          "message": "Add logic to this catch clause or eliminate it and rethrow the exception automatically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Micro%20Services/CreditService/src/Common/EventBusMQ/RabbitMQConnection.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0649": {
          "id": "CS0649",
          "shortDescription": "Field is never assigned to, and will always have its default value",
          "defaultLevel": "warning",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S2737": {
          "id": "S2737",
          "shortDescription": "\"catch\" clauses should do more than rethrow",
          "fullDescription": "A catch clause that only rethrows the caught exception has the same effect as omitting the catch altogether and letting it bubble up automatically, but with more code and the additional detriment of leaving maintainers scratching their heads.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2737",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S3459": {
          "id": "S3459",
          "shortDescription": "Unassigned members should be removed",
          "fullDescription": "Fields and auto-properties that are never assigned to hold the default values for their types. They are either pointless code or, more likely, mistakes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3459",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        }
      }
    }
  ]
}